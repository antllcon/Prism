/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/script.js":
/*!***********************!*\
  !*** ./src/script.js ***!
  \***********************/
/***/ (() => {

eval("// A cross-browser requestAnimationFrame\r\n// See https://hacks.mozilla.org/2011/08/animating-with-javascript-from-setinterval-to-requestanimationframe/\r\nlet requestAnimFrame = (function(){\r\n    return window.requestAnimationFrame       ||\r\n        window.webkitRequestAnimationFrame ||\r\n        window.mozRequestAnimationFrame    ||\r\n        window.oRequestAnimationFrame      ||\r\n        window.msRequestAnimationFrame     ||\r\n        function(callback){\r\n            window.setTimeout(callback, 1000 / 60);\r\n        };\r\n})();\r\n\r\nlet canvas = document.getElementById(\"canvas\");\r\n\r\nconst canvasWidth = 400;\r\nconst canvasHeight = 400;\r\n\r\nlet player = {\r\n    pos: [0, 0],\r\n    size: 10,\r\n    color: 'brown',\r\n    speed: 200\r\n};\r\n\r\nlet Game = {\r\n    width: canvasWidth,\r\n    height: canvasHeight,\r\n    background: 'grey'\r\n}\r\n\r\ncanvas.width = Game.width;\r\ncanvas.height = Game.height;\r\nlet canvasContext = canvas.getContext(\"2d\");\r\nlet gameTime = 0;\r\n\r\n\r\nfunction drawBackground() {\r\n    canvasContext.fillStyle = Game.background;\r\n    canvasContext.fillRect(Game.width, Game.height, 0, 0);\r\n}\r\nfunction drawPlayer() {\r\n    canvasContext.fillStyle = player.color;\r\n    canvasContext.fillRect(player.pos[0], player.pos[1], player.size, player.size);\r\n}\r\nfunction drawFrame() {\r\n    canvasContext.clearRect(0, 0, Game.width, Game.height);\r\n    drawBackground();\r\n    drawPlayer();\r\n}\r\n\r\nlet lastTime;\r\nfunction main() {\r\n    let now = Date.now();\r\n    let dt = (now - lastTime) / 1000.0;\r\n\r\n    update(dt);\r\n    render();\r\n    drawPlayer();\r\n    lastTime = now;\r\n    requestAnimFrame(main);\r\n}\r\n\r\nfunction init() {\r\n    drawBackground();\r\n    drawPlayer();\r\n    lastTime = Date.now();\r\n    main();\r\n}\r\n\r\ninit();\r\n\r\nfunction update(dt) {\r\n    gameTime += dt;\r\n    handleInput(dt);\r\n    // updateEntities(dt);\r\n    checkCollisions();\r\n};\r\n\r\nfunction handleInput(dt) {\r\n    if(input.isDown('DOWN') || input.isDown('s')) {\r\n        player.pos[1] += player.speed * dt;\r\n    }\r\n\r\n    if(input.isDown('UP') || input.isDown('w')) {\r\n        player.pos[1] -= player.speed * dt;\r\n    }\r\n\r\n    if(input.isDown('LEFT') || input.isDown('a')) {\r\n        player.pos[0] -= player.speed * dt;\r\n    }\r\n\r\n    if(input.isDown('RIGHT') || input.isDown('d')) {\r\n        player.pos[0] += player.speed * dt;\r\n    }\r\n}\r\nfunction updateEntities(dt) {\r\n\r\n}\r\nfunction checkCollisions() {\r\n    checkPlayerBounds();\r\n}\r\nfunction checkPlayerBounds() {\r\n    // Check bounds\r\n    if(player.pos[0] < 0) {\r\n        player.pos[0] = Game.width;\r\n    }\r\n    else if(player.pos[0] > Game.width) {\r\n        player.pos[0] = 0;\r\n    }\r\n\r\n    if(player.pos[1] < 0) {\r\n        player.pos[1] = Game.height;\r\n    }\r\n    else if(player.pos[1] > Game.height) {\r\n        player.pos[1] = 0;\r\n    }\r\n}\r\nfunction render() {\r\n    canvasContext.fillStyle = Game.background;\r\n    canvasContext.fillRect(0, 0, Game.width, Game.height);\r\n};\r\n\r\n\r\n\r\n(function() {\r\n    let pressedKeys = {};\r\n\r\n    function setKey(event, status) {\r\n        let code = event.keyCode;\r\n        let key;\r\n\r\n        switch(code) {\r\n            case 32:\r\n                key = 'SPACE'; break;\r\n            case 37:\r\n                key = 'LEFT'; break;\r\n            case 38:\r\n                key = 'UP'; break;\r\n            case 39:\r\n                key = 'RIGHT'; break;\r\n            case 40:\r\n                key = 'DOWN'; break;\r\n            default:\r\n                // Convert ASCII codes to letters\r\n                key = String.fromCharCode(code);\r\n        }\r\n\r\n        pressedKeys[key] = status;\r\n    }\r\n\r\n    document.addEventListener('keydown', function(e) {\r\n        setKey(e, true);\r\n    });\r\n\r\n    document.addEventListener('keyup', function(e) {\r\n        setKey(e, false);\r\n    });\r\n\r\n    window.addEventListener('blur', function() {\r\n        pressedKeys = {};\r\n    });\r\n\r\n    window.input = {\r\n        isDown: function(key) {\r\n            return pressedKeys[key.toUpperCase()];\r\n        }\r\n    };\r\n})();\r\n\r\n(function() {\r\n    var pressedKeys = {};\r\n\r\n    function setKey(event, status) {\r\n        var code = event.keyCode;\r\n        var key;\r\n\r\n        switch(code) {\r\n            case 32:\r\n                key = 'SPACE'; break;\r\n            case 37:\r\n                key = 'LEFT'; break;\r\n            case 38:\r\n                key = 'UP'; break;\r\n            case 39:\r\n                key = 'RIGHT'; break;\r\n            case 40:\r\n                key = 'DOWN'; break;\r\n            default:\r\n                // Convert ASCII codes to letters\r\n                key = String.fromCharCode(code);\r\n        }\r\n\r\n        pressedKeys[key] = status;\r\n    }\r\n\r\n    document.addEventListener('keydown', function(e) {\r\n        setKey(e, true);\r\n    });\r\n\r\n    document.addEventListener('keyup', function(e) {\r\n        setKey(e, false);\r\n    });\r\n\r\n    window.addEventListener('blur', function() {\r\n        pressedKeys = {};\r\n    });\r\n\r\n    window.input = {\r\n        isDown: function(key) {\r\n            return pressedKeys[key.toUpperCase()];\r\n        }\r\n    };\r\n})();\r\n\n\n//# sourceURL=webpack://prism/./src/script.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/script.js"]();
/******/ 	
/******/ })()
;